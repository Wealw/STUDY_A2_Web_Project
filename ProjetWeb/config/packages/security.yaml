security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

  providers:
    jwt:
      lexik_jwt:
        class: App\Security\User

  firewalls:
    login:
      pattern:  http://127.0.0.1:3000/api/login
      stateless: true
      anonymous: true
      user_checker: App\Security\UserChecker
      json_login:
        check_path: http://127.0.0.1:3000/api/login
        #username_path : user_email
        #password_path : user_password
        # Obligatoire pour l'utilisation de Lexit
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true
      guard:
        authenticators:
          - App\Security\TokenAuthenticator

      logout:
        path: htttp://127.0.0.1:3000/api/logout
        target: /


      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  role_hierarchy:
    ROLE_BDE: ROLE_ADMIN
    ROLE_ADMIN: [ROLE_USER, ROLE_MODO]
    ROLE_CESI: [ROLE_USER, ROLE_MODO]

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_MODO }
    # - { path: ^/profile, roles: ROLE_USER }

  encoders:
    App\Security\User:
      algorithm: auto
